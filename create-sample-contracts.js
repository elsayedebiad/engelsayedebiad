const { PrismaClient } = require('@prisma/client')

const db = new PrismaClient()

async function createSampleContracts() {
  try {
    console.log('๐ง ุฅูุดุงุก ุชุนุงูุฏุงุช ุชุฌุฑูุจูุฉ...\n')

    // ุงูุจุญุซ ุนู ุงูุณูุฑ ุงููุชุงุญุฉ ูุฅูุดุงุก ุชุนุงูุฏุงุช ููุง
    const availableCVs = await db.cV.findMany({
      where: {
        status: 'NEW'
      },
      select: {
        id: true,
        fullName: true,
        referenceCode: true,
        nationality: true,
        position: true
      },
      take: 3 // ุฃุฎุฐ ุฃูู 3 ุณูุฑ ููุท ููุชุฌุฑุจุฉ
    })

    console.log(`๐ ููุฌุฏ ${availableCVs.length} ุณูุฑ ูุชุงุญุฉ ูุฅูุดุงุก ุชุนุงูุฏุงุช`)

    if (availableCVs.length === 0) {
      console.log('โ ูุง ุชูุฌุฏ ุณูุฑ ูุชุงุญุฉ ูุฅูุดุงุก ุชุนุงูุฏุงุช')
      
      // ุงูุชุญูู ูู ุงูุณูุฑ ุงูููุฌูุฏุฉ
      const totalCVs = await db.cV.count()
      const hiredCVs = await db.cV.count({ where: { status: 'HIRED' } })
      const bookedCVs = await db.cV.count({ where: { status: 'BOOKED' } })
      
      console.log(`๐ ุฅุฌูุงูู ุงูุณูุฑ: ${totalCVs}`)
      console.log(`โ ูุชุนุงูุฏ ุนูููุง: ${hiredCVs}`)
      console.log(`๐ ูุญุฌูุฒุฉ: ${bookedCVs}`)
      
      return
    }

    console.log('\n๐ ุงูุณูุฑ ุงูุชู ุณูุชู ุงูุชุนุงูุฏ ูุนูุง:')
    console.log('='.repeat(50))

    let createdCount = 0
    const sampleIdentityNumbers = ['123456789', '987654321', '456789123']

    for (let i = 0; i < availableCVs.length; i++) {
      const cv = availableCVs[i]
      const identityNumber = sampleIdentityNumbers[i] || `ID${Date.now()}${i}`
      
      console.log(`\n๐ง ุฅูุดุงุก ุชุนุงูุฏ ูู: ${cv.fullName}`)
      console.log(`   ๐ ุงูููุฏ: ${cv.referenceCode || 'ุบูุฑ ูุญุฏุฏ'}`)
      console.log(`   ๐ณ๏ธ ุงูุฌูุณูุฉ: ${cv.nationality || 'ุบูุฑ ูุญุฏุฏ'}`)
      console.log(`   ๐ผ ุงููุธููุฉ: ${cv.position || 'ุบูุฑ ูุญุฏุฏ'}`)
      console.log(`   ๐ ุฑูู ุงููููุฉ: ${identityNumber}`)

      try {
        // ุฅูุดุงุก ุงูุชุนุงูุฏ ูุชุญุฏูุซ ุญุงูุฉ ุงูุณูุฑุฉ ูู ูุนุงููุฉ ูุงุญุฏุฉ
        await db.$transaction(async (tx) => {
          // ุฅูุดุงุก ุงูุชุนุงูุฏ
          const contract = await tx.contract.create({
            data: {
              cvId: cv.id,
              identityNumber: identityNumber,
              contractStartDate: new Date(),
              contractEndDate: null
            }
          })

          // ุชุญุฏูุซ ุญุงูุฉ ุงูุณูุฑุฉ ุฅูู HIRED
          await tx.cV.update({
            where: { id: cv.id },
            data: { status: 'HIRED' }
          })

          console.log(`   โ ุชู ุฅูุดุงุก ุงูุชุนุงูุฏ ุจุฑูู: ${contract.id}`)
          console.log(`   โ ุชู ุชุญุฏูุซ ุญุงูุฉ ุงูุณูุฑุฉ ุฅูู HIRED`)
        })

        createdCount++

      } catch (error) {
        console.log(`   โ ูุดู ูู ุฅูุดุงุก ุงูุชุนุงูุฏ: ${error.message}`)
      }
    }

    console.log(`\n๐ฏ ุงููุชุงุฆุฌ:`)
    console.log('='.repeat(30))
    console.log(`๐ ุฅุฌูุงูู ุงูุณูุฑ: ${availableCVs.length}`)
    console.log(`โ ุชู ุฅูุดุงุก: ${createdCount} ุชุนุงูุฏ`)
    console.log(`โ ูุดู: ${availableCVs.length - createdCount} ุชุนุงูุฏ`)

    if (createdCount > 0) {
      console.log(`\n๐ ุชู ุฅูุดุงุก ${createdCount} ุชุนุงูุฏ ุฌุฏูุฏ!`)
      console.log('โ ุณุชุธูุฑ ุงูุขู ูู ุตูุญุฉ ุงููุชุนุงูุฏูู')
      console.log('โ ุณุชุฎุชูู ูู ุตูุญุงุช ุงูุณููุฒ')
    }

    // ุงูุฅุญุตุงุฆูุงุช ุงูููุงุฆูุฉ
    console.log('\n๐ ุงูุฅุญุตุงุฆูุงุช ุงูููุงุฆูุฉ:')
    console.log('='.repeat(40))
    
    const totalContracts = await db.contract.count()
    const totalHired = await db.cV.count({ where: { status: 'HIRED' } })
    const totalNew = await db.cV.count({ where: { status: 'NEW' } })
    const totalBooked = await db.cV.count({ where: { status: 'BOOKED' } })

    console.log(`๐ผ ุฅุฌูุงูู ุงูุชุนุงูุฏุงุช: ${totalContracts}`)
    console.log(`โ ุงูุณูุฑ ุงููุชุนุงูุฏ ุนูููุง: ${totalHired}`)
    console.log(`๐ ุงูุณูุฑ ุงููุชุงุญุฉ ูู ุงูุณููุฒ: ${totalNew}`)
    console.log(`๐ ุงูุณูุฑ ุงููุญุฌูุฒุฉ: ${totalBooked}`)

    console.log('\n๐ ููููู ุงูุขู:')
    console.log('1. ุฒูุงุฑุฉ ุตูุญุฉ ุงููุชุนุงูุฏูู ูุฑุคูุฉ ุงูุชุนุงูุฏุงุช ุงูุฌุฏูุฏุฉ')
    console.log('2. ุฒูุงุฑุฉ ุตูุญุงุช ุงูุณููุฒ ููุชุฃูุฏ ูู ุงุฎุชูุงุก ุงูุณูุฑ ุงููุชุนุงูุฏ ุนูููุง')

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฅูุดุงุก ุงูุชุนุงูุฏุงุช:', error)
  } finally {
    await db.$disconnect()
  }
}

createSampleContracts()
