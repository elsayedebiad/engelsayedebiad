const { PrismaClient } = require('@prisma/client')

const db = new PrismaClient()

async function checkVideoLinks() {
  try {
    console.log('๐ ูุญุต ุฑูุงุจุท ุงูููุฏูู ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช...\n')

    // ุฌูุจ ุฌููุน ุงูุณูุฑ ุงูุฐุงุชูุฉ ูุน ุญูู ุงูููุฏูู
    const cvs = await db.cV.findMany({
      select: {
        id: true,
        fullName: true,
        videoLink: true,
        status: true,
        createdAt: true
      },
      orderBy: { createdAt: 'desc' },
      take: 20
    })

    console.log(`๐ ุฅุฌูุงูู ุงูุณูุฑ ุงูุฐุงุชูุฉ: ${cvs.length}`)

    // ุชุญููู ุงูุจูุงูุงุช
    const withVideo = cvs.filter(cv => cv.videoLink && cv.videoLink.trim() !== '')
    const withoutVideo = cvs.filter(cv => !cv.videoLink || cv.videoLink.trim() === '')
    const availableCVs = cvs.filter(cv => cv.status === 'NEW')

    console.log(`\n๐ ุงูุฅุญุตุงุฆูุงุช:`)
    console.log(`โ ุณูุฑ ูุฏููุง ููุฏูู: ${withVideo.length}`)
    console.log(`โ ุณูุฑ ุจุฏูู ููุฏูู: ${withoutVideo.length}`)
    console.log(`๐ ุณูุฑ ูุชุงุญุฉ (NEW): ${availableCVs.length}`)

    console.log(`\n๐ฅ ุงูุณูุฑ ุงูุชู ูุฏููุง ุฑูุงุจุท ููุฏูู:`)
    withVideo.forEach((cv, index) => {
      const videoType = cv.videoLink.includes('youtube.com') ? 'YouTube' :
                       cv.videoLink.includes('youtu.be') ? 'YouTube Short' :
                       cv.videoLink.includes('drive.google.com') ? 'Google Drive' :
                       cv.videoLink.includes('vimeo.com') ? 'Vimeo' : 'ุฃุฎุฑู'
      
      console.log(`${index + 1}. ${cv.fullName} - ${videoType}`)
      console.log(`   ุงูุฑุงุจุท: ${cv.videoLink}`)
      console.log(`   ุงูุญุงูุฉ: ${cv.status}`)
      console.log('')
    })

    if (withoutVideo.length > 0) {
      console.log(`\nโ ุงูุณูุฑ ุจุฏูู ููุฏูู (ุฃูู 5):`)
      withoutVideo.slice(0, 5).forEach((cv, index) => {
        console.log(`${index + 1}. ${cv.fullName} - ุงูุญุงูุฉ: ${cv.status}`)
      })
    }

    // ุงูุชุฑุงุญุงุช
    console.log(`\n๐ก ุงูุชูุตูุงุช:`)
    if (withoutVideo.length > 0) {
      console.log(`- ุชุดุบูู ุณูุฑูุจุช add-video-links.js ูุฅุถุงูุฉ ุฑูุงุจุท ุชุฌุฑูุจูุฉ`)
    }
    if (availableCVs.length === 0) {
      console.log(`- ูุง ุชูุฌุฏ ุณูุฑ ูุชุงุญุฉ (NEW status) - ุชุญูู ูู ุญุงูุฉ ุงูุณูุฑ`)
    }

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ูุญุต ุงูุจูุงูุงุช:', error)
  } finally {
    await db.$disconnect()
  }
}

// ุชุดุบูู ุงููุญุต
checkVideoLinks()
